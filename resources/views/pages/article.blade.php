<x-layout :content="$article">
    @section('title', $article->title)

    {{--
        1.  Initializes two variables for Alpine.js:
            - toc: an empty array to hold our generated table of contents.
            - tocOpen: a boolean to control the side panel's visibility (initially false).
        2.  x-init automatically finds all h2/h3/h4 headings in the article and populates the 'toc'
         array.
    --}}
    <div
        x-data="{ toc: [], tocOpen: false }"
        x-init="
            let content = $refs.content;
            let headings = content.querySelectorAll('h2, h3, h4');
            headings.forEach((heading, index) => {
                let id = 'toc-' + index + '-' + heading.textContent.toLowerCase().replace(/\s+/g, '-').replace(/[^\w-]+/g, '');
                heading.id = id;
                heading.classList.add('scroll-mt-20');
                toc.push({
                    id: id,
                    text: heading.textContent,
                    level: heading.tagName.toLowerCase()
                });
            });
        "
        class="prose prose-lg max-w-none">
        <h1 class="text-center">{{ $article->title }}</h1>

        {{-- The article content itself. We add x-ref="content" so Alpine.js knows where to look for headings. --}}
        <div x-ref="content">
            {!! $article->content_html !!}
        </div>

        {{-- FLOATING BUTTON - Appears only if the 'toc' array is not empty --}}
        <template x-if="toc.length > 0">
            <button @click="tocOpen = true" class="fixed bottom-5 left-5 z-40 px-4 py-2 bg-sky-600 text-white rounded-full shadow-lg hover:bg-sky-700">
                Содержание
            </button>
        </template>

        {{-- SIDE PANEL - Exactly like the book's ToC panel --}}
        <template x-teleport="body">
            <div x-show="tocOpen" x-cloak class="fixed inset-0 z-50 flex">
                {{-- Overlay --}}
                <div @click="tocOpen = false" class="absolute inset-0 bg-black/50"></div>

                {{-- Panel Content --}}
                <div class="relative flex flex-col max-w-xs w-full h-full bg-white">
                    <div class="flex-shrink-0 p-6 border-b">
                        <div class="flex items-center justify-between">
                            <h3 class="text-xl font-semibold">Содержание</h3>
                            <button @click="tocOpen = false" class="p-1 rounded-full hover:bg-gray-200">&times;</button>
                        </div>
                    </div>
                    <div class="flex-grow p-6 overflow-y-auto">
                        <ul class="space-y-2">
                            {{-- We loop through the 'toc' array generated by our script --}}
                            <template x-for="item in toc" :key="item.id">
                                <li :class="{ 'pl-4': item.level === 'h3', 'pl-8': item.level === 'h4' }">
                                    <a :href="'#' + item.id"
                                       @click.prevent="
                document.querySelector('#' + item.id).scrollIntoView({ behavior: 'smooth' });
                tocOpen = false;
           "
                                       class="no-underline hover:text-amber-600"
                                       x-text="item.text.replace(/<[^>]*>?/gm, '')">
                                    </a>
                                </li>
                            </template>
                        </ul>
                    </div>
                </div>
            </div>
        </template>
    </div>
</x-layout>
